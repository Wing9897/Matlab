clc
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %diff
%f = @(x) exp(2*x)+x^(3)+x;
%df = @(x) 2*exp(2*x)+3*4^(2)+1;
%Lib_diff_ch1(f,df,0.2,4)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %trap
%f = @(x) 3*exp(-2*x^2);
%Lib_trap_ch1(f,0.5,2,6)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %sim 1/3
%f = @(x) 3*exp(-2*x^2);
%Lib_1o3_ch2(f,0.5,2,6)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %fix-point
%g = @(x) ((x^2)+2)/8;
%Lib_fixed_point_ch2(g,0.25,0.0001)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %newton
%f = @(x) (x^2)-8*x+2;
%df = @(x) 2*x-8;
%Lib_newton_ch2(f,df,0.26,0.00000000001,2)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %euler
%df = @(x,y) 1+y^2;
%Lib_euler_ch3(df,0,0,0.2,0.4);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %rk2
%df = @(x,y) 1+y^2;
%Lib_rk2_ch3(df,0,0,0.2,0.4)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %rk4
%df = @(x,y) 4*exp(-3*x)-7*y;
%Lib_rk4_ch3(df,0,4,0.5);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %Liebmann's method
% i = 4;
% j = 4;
% U = zeros(i,j); % 創建4x4網格
% 
% % 設置邊界條件（根據 i, j 自動調整）
% U(1,:) = 100;    % 上邊界
% U(i,:) = 0;      % 下邊界
% U(:,1) = 75;      % 左邊界
% U(:,j) = 50;     % 右邊界
% 
% 
% % 設置內部節點初始值（可選，這裡保持為0）
% U(2:3, 2:3) = [75  50  ; 
%                75  50  ;];
% 
% 
% % 調用 Lib_liebmann 方法（3次迭代）
% % 邊界條件在迭代過程中自動保持不變
% [U_final, n_iter] = Lib_liebmann(U, 3);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %Liebmann's method accelerated school version
% i = 4;
% j = 4;
% U = zeros(i,j); % 創建4x4網格
% 
% % 設置邊界條件（根據 i, j 自動調整）
% U(1,:) = 0;    % 上邊界
% U(i,:) = 100;      % 下邊界
% U(:,1) = 100;      % 左邊界
% U(:,j) = 100;     % 右邊界
% 
% 
% %設置內部節點初始值（可選，這裡保持為0）
% U(2:3, 2:3) = [100 100  ; 
%                100 100  ;];
% 
% % 調用 Lib_liebmann 方法（3次迭代）
% % 邊界條件在迭代過程中自動保持不變
% [U_final, n_iter] = Lib_liebmann_accelerated_school(U, 6); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Lib_simplex_method 方式1：只需輸入目標函數和約束條件
% 問題：最大化 Z = 15x1 + 12x2
% 約束條件：
%   x1 + 2x2 <= 15
%   2x1 - x2 <= 20
%   x1, x2 >= 0
c = [15, 12];  % max Z = 15x1 + 12x2
A = [1,  2;    % x1 + 2x2 <= 15
     2, -1];   % 2x1 - x2 <= 20
b = [15; 20];

[solution1, value1, iter1] = Lib_simplex_method(c, A, b);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Lib_simplex_method 方式2：手動構建初始表格
% initial_tableau = [1, 2, 1, 0, 15; 
%                    2, -1, 0, 1, 20];
% objective_coeffs = [15, 12];
% 
% [solution2, value2, iter2] = Lib_simplex_method(initial_tableau, objective_coeffs);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

clc
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %diff
%f = @(x) exp(2*x)+x^(3)+x;
%df = @(x) 2*exp(2*x)+3*4^(2)+1;
%Lib_diff_ch1(f,df,0.2,4)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %trap
%f = @(x) 3*exp(-2*x^2);
%Lib_trap_ch1(f,0.5,2,6)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %sim 1/3
%f = @(x) 3*exp(-2*x^2);
%Lib_1o3_ch2(f,0.5,2,6)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %fix-point
%g = @(x) ((x^2)+2)/8;
%Lib_fixed_point_ch2(g,0.25,0.0001)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %newton
%f = @(x) (x^2)-8*x+2;
%df = @(x) 2*x-8;
%Lib_newton_ch2(f,df,0.26,0.00000000001,2)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %euler
%df = @(x,y) 1+y^2;
%Lib_euler_ch3(df,0,0,0.2,0.4);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %rk2
%df = @(x,y) 1+y^2;
%Lib_rk2_ch3(df,0,0,0.2,0.4)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %rk4
%df = @(x,y) 4*exp(-3*x)-7*y;
%Lib_rk4_ch3(df,0,4,0.5);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %Liebmann’s method
% i = 4;
% j = 4;
% U = zeros(i,j); % 创建4x4网格
% 
% % 设置边界条件（根据 i, j 自动调整）
% U(1,:) = 100;    % 上边界
% U(i,:) = 0;      % 下边界
% U(:,1) = 75;      % 左边界
% U(:,j) = 50;     % 右边界
% 
% 
% % 设置内部节点初始值（可选，这里保持为0）
% U(2:3, 2:3) = [75  50  ; 
%                75  50  ;];
% 
% 
% % 调用 Lib_liebmann 方法（3次迭代）
% % 边界条件在迭代过程中自动保持不变
% [U_final, n_iter] = Lib_liebmann(U, 3); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %Liebmann’s method accelerated school version
i = 4;
j = 4;
U = zeros(i,j); % 创建4x4网格

% 设置边界条件（根据 i, j 自动调整）
U(1,:) = 0;    % 上边界
U(i,:) = 100;      % 下边界
U(:,1) = 100;      % 左边界
U(:,j) = 100;     % 右边界


%设置内部节点初始值（可选，这里保持为0）
U(2:3, 2:3) = [100 100  ; 
               100 100  ;];

% 调用 Lib_liebmann 方法（3次迭代）
% 边界条件在迭代过程中自动保持不变
[U_final, n_iter] = Lib_liebmann_accelerated_school(U, 6); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
